@mixin container() {
	display: block;
	width: auto;
	min-height: 1px;
	@include clearfix;
	@media (min-width: $container-max-width) {
		width: $container-max-width;    
		margin: 0 auto;
	}
}
@mixin button-variant($color, $background, $border) {
	color: $color;
	background-color: $background;
	border-color: $border;

	&:hover,
	&:focus,
	&.focus,
	&:active,
	&.active {
		// color: $color;
		background-color: darken($background, 10%);
		//     border-color: darken($border, 12%);
		@include text-shadow(1px 1px 0px rgba(1, 1, 1, 0.1));
	}
	&:active,
	&.active {
		background-image: none;
	}
	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&.focus,
		&:active,
		&.active {
			background-color: $background;
					border-color: $border;
		}
	}
}

@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin placeholder($color: #cacaca) {
	// Firefox
	&::-moz-placeholder {
		color: $color;
		opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
	}
	&:-ms-input-placeholder { color: $color; } // Internet Explorer 10+
	&::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> .az-inner-box {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		padding: 10px 10px 0 0;
	}
}

$browser-context: 16; // Default

@function em($pixels, $context: $browser-context) {
	@return #{$pixels/$context}rem
}